goods.dist=vegdist(nl, method="bray", na.rm = TRUE)
goods.pcoa=pcoa(goods.dist)
# PCA:
pcp=prcomp(nl, retx=TRUE, center=TRUE)
scores=goods.pcoa$vectors
summary(goods.pcoa)
#conditions=end_full_adonis[, c("frag","treat","sitename","lineage","dominant_type")] #make sure to change dataframe here
conditions=t0_full_adonis[, c("frag","treat","sitename","lineage")] #make sure to change dataframe here
# PERMANOVA
head(scores)
head(conditions)
t0_model = adonis(scores~lineage+sitename, data=conditions, method="euclidean", permutations = 10000)
adonis_OmegaSq(t0_model, partial = TRUE)
# Stats of daily light integral by lineage
str(skel_phys2)
# Stats of daily light integral by lineage
str(skel_phys3)
m2 <- lm(dli_kd0.38 ~ lineage, data = skel_phys3)
summary(m2)
anova(m2)
lsmeans(m2, pairwise~lineage, adjust="tukey")
# light enhancement factor plots
# plot, treatment x axis colored by lineage data figure
lef_plot_lineage <- ggplot(skel_phys_nona_2lin, aes(x = lineage, y = lef))+
theme_bw()+
geom_jitter(aes(color = lineage, fill = lineage),
position=position_dodge(width=0.3),
alpha=0.2, pch = 21,
color = "black") +
geom_errorbar(data = lef_means_2lin, aes(x = lineage, ymax = lef+se, ymin = lef-se, color = lineage), width = .2, position = position_dodge(width=0.4)) +
geom_point(data = lef_means_2lin, mapping = aes(x=lineage, y=lef, color = lineage, fill = lineage), size = 3.5, pch = 21, color = "black", position = position_dodge(width=0.4))+
scale_fill_manual(name = "Lineage",
values = cols_lineage)+
scale_color_manual(name = "Lineage",
values = cols_lineage)+
xlab("Lineage")+
ylab("Light Enhancement Factor (LEF)") +
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1))
lef_plot_lineage
# Isolate sites for plotting
# plot, treatment x axis colored by lineage data figure
lef_plot_lineage_CI <- ggplot(skel_phys_CI,aes(x = lineage, y = lef))+
theme_bw()+
geom_jitter(aes(color = lineage, fill = lineage),
position=position_dodge(width=0.3),
alpha=0.2, pch = 21,
color = "black") +
geom_errorbar(data = lef_means_CI, aes(x = lineage, ymax = lef+se, ymin = lef-se, color = lineage), width = .2, position = position_dodge(width=0.4)) +
geom_point(data = lef_means_CI, mapping = aes(x=lineage, y=lef, color = lineage, fill = lineage), size = 3.5, pch = 21, color = "black", position = position_dodge(width=0.4))+
scale_fill_manual(name = "Lineage",
values = cols_lineage)+
scale_color_manual(name = "Lineage",
values = cols_lineage)+
xlab("Treatment")+
ylab("Light Enhancement Factor (LEF)") +
ggtitle("Cristobal Island") +
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1))
lef_plot_lineage_CI
#SP
# plot, treatment x axis colored by lineage data figure
lef_plot_lineage_SP <- ggplot(skel_phys_SP,aes(x = lineage, y = lef))+
theme_bw()+
geom_jitter(aes(color = lineage, fill = lineage),
position=position_dodge(width=0.3),
alpha=0.2, pch = 21,
color = "black") +
geom_errorbar(data = lef_means_SP, aes(x = lineage, ymax = lef+se, ymin = lef-se, color = lineage), width = .2, position = position_dodge(width=0.4)) +
geom_point(data = lef_means_SP, mapping = aes(x=lineage, y=lef, color = lineage, fill = lineage), size = 3.5, pch = 21, color = "black", position = position_dodge(width=0.4))+
scale_fill_manual(name = "Lineage",
values = cols_lineage)+
scale_color_manual(name = "Lineage",
values = cols_lineage)+
xlab("Treatment")+
ylab("Light enhancement factor (LEF)") +
ggtitle("STRI Point") +
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1))
lef_plot_lineage_SP
ggsave(lef_plot_lineage_SP, filename = "/Users/hannahaichelman/Documents/BU/TVE/SkeletonMorphometry/LEF_2_lin_SP.pdf", width=5, height=4, units=c("in"), useDingbats=FALSE)
lef_plot_lineage_CI
ggsave(lef_plot_lineage_CI, filename = "/Users/hannahaichelman/Documents/BU/TVE/SkeletonMorphometry/LEF_2_lin_CI.pdf", width=5, height=4, units=c("in"), useDingbats=FALSE)
m1 <- lm(lef ~ lineage, data = skel_phys_CI)
summary(m1)
anova(m1)
lsmeans(m1, pairwise~lineage, adjust="tukey")
lef_plot_lineage_CI <- ggplot(skel_phys_CI,aes(x = lineage, y = lef))+
theme_bw()+
geom_errorbar(data = lef_means_CI, aes(x = lineage, ymax = lef+se, ymin = lef-se, color = lineage), width = .2, position = position_dodge(width=0.4)) +
geom_point(data = lef_means_CI, mapping = aes(x=lineage, y=lef, color = lineage, fill = lineage), size = 3.5, pch = 21, color = "black", position = position_dodge(width=0.4))+
scale_fill_manual(name = "Lineage",
values = cols_lineage)+
scale_color_manual(name = "Lineage",
values = cols_lineage)+
xlab("Treatment")+
ylab("Light Enhancement Factor (LEF)") +
ggtitle("Cristobal Island") +
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1))
lef_plot_lineage_CI
ggsave(lef_plot_lineage_CI, filename = "/Users/hannahaichelman/Documents/BU/TVE/SkeletonMorphometry/LEF_2_lin_CI.pdf", width=4, height=4, units=c("in"), useDingbats=FALSE)
# separate out CI and SP sites and re-plot LEF:
lef_plot_lineage_CI <- ggplot(skel_phys_CI,aes(x = lineage, y = lef))+
theme_bw()+
geom_errorbar(data = lef_means_CI, aes(x = lineage, ymax = lef+se, ymin = lef-se, color = lineage), width = .2, position = position_dodge(width=0.4)) +
geom_point(data = lef_means_CI, mapping = aes(x=lineage, y=lef, color = lineage, fill = lineage), size = 3.5, pch = 21, color = "black", position = position_dodge(width=0.4))+
scale_fill_manual(name = "Lineage",
values = cols_lineage)+
scale_color_manual(name = "Lineage",
values = cols_lineage)+
xlab("Treatment")+
ylab("Light Enhancement Factor (LEF)") +
#ggtitle("Cristobal Island") +
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1))
lef_plot_lineage_CI
ggsave(lef_plot_lineage_CI, filename = "/Users/hannahaichelman/Documents/BU/TVE/SkeletonMorphometry/LEF_2_lin_CI.pdf", width=4, height=4, units=c("in"), useDingbats=FALSE)
# separate out CI and SP sites and re-plot LEF:
lef_plot_lineage_CI <- ggplot(skel_phys_CI,aes(x = lineage, y = lef))+
theme_bw()+
geom_errorbar(data = lef_means_CI, aes(x = lineage, ymax = lef+se, ymin = lef-se, color = lineage), width = .2, position = position_dodge(width=0.4)) +
geom_point(data = lef_means_CI, mapping = aes(x=lineage, y=lef, color = lineage, fill = lineage), size = 3.5, pch = 21, color = "black", position = position_dodge(width=0.4))+
scale_fill_manual(name = "Lineage",
values = cols_lineage)+
scale_color_manual(name = "Lineage",
values = cols_lineage)+
xlab("Treatment")+
ylab("Light Enhancement Factor (LEF)") +
#ggtitle("Cristobal Island") +
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1), legend.position = "none")
lef_plot_lineage_CI
ggsave(lef_plot_lineage_CI, filename = "/Users/hannahaichelman/Documents/BU/TVE/SkeletonMorphometry/LEF_2_lin_CI.pdf", width=4, height=4, units=c("in"), useDingbats=FALSE)
ggsave(lef_plot_lineage_CI, filename = "/Users/hannahaichelman/Documents/BU/TVE/SkeletonMorphometry/LEF_2_lin_CI.pdf", width=3, height=3, units=c("in"), useDingbats=FALSE)
#### Skeleton Morphometrics ####
skel_phys = read.csv("/Users/hannahaichelman/Documents/BU/TVE/SkeletonMorphometry/T0_morphology.csv")
head(skel_phys)
str(skel_phys)
skel_phys2 = skel_phys %>%
mutate(treat = as.factor(treat), sitename = as.factor(sitename), reef = as.factor(reef), lineage = as.factor(lineage))
head(skel_phys2)
#create a new column of combined genotype and site for stats later
skel_phys2$origsitecode <- substr(skel_phys2$frag, 1, 2)
skel_phys2$genet <- substr(skel_phys2$frag,3,3)
skel_phys3 = skel_phys2 %>%
unite(gen_site, c(origsitecode,genet), sep = "", remove = FALSE) %>%
mutate(gen_site = as.factor(gen_site)) %>%
dplyr::filter(gen_site != "I4G") # clone with I4F, remove from dataset
# Stats of light enhancement factor by lineage
str(skel_phys2)
#### Skeleton Morphometrics ####
skel_phys = read.csv("/Users/hannahaichelman/Documents/BU/TVE/SkeletonMorphometry/T0_morphology.csv")
head(skel_phys)
str(skel_phys)
skel_phys2 = skel_phys %>%
mutate(treat = as.factor(treat), sitename = as.factor(sitename), reef = as.factor(reef), lineage = as.factor(lineage))
head(skel_phys2)
#create a new column of combined genotype and site for stats later
skel_phys2$origsitecode <- substr(skel_phys2$frag, 1, 2)
skel_phys2$genet <- substr(skel_phys2$frag,3,3)
skel_phys3 = skel_phys2 %>%
unite(gen_site, c(origsitecode,genet), sep = "", remove = FALSE) %>%
mutate(gen_site = as.factor(gen_site)) %>%
dplyr::filter(gen_site != "I4G") # clone with I4F, remove from dataset
# subset data for plotting DLI and LEF
skel_phys_nona = skel_phys3 %>%
drop_na(lef)
skel_phys_CI = skel_phys_nona %>%
dplyr::filter(sitename == "CI")
skel_phys_SP = skel_phys_nona %>%
dplyr::filter(sitename == "SP")
skel_phys_nona_2lin = skel_phys_nona %>%
dplyr::filter(is.na(lineage) | lineage!="L3") # want to keep NA values for lineage here since they still have other info, will remove na's for lineage specific plots
m1 <- lm(lef ~ lineage, data = skel_phys_nona_2lin)
summary(m1)
# summarize data for plotting
lef_means <- summarySE(skel_phys_nona, measurevar="lef", groupvars=c("lineage"))
lef_means_2lin <- summarySE(skel_phys_nona_2lin, measurevar="lef", groupvars=c("lineage"))
lef_means_SP <- summarySE(skel_phys2_SP, measurevar="lef", groupvars=c("lineage"))
lef_means_CI <- summarySE(skel_phys2_CI, measurevar="lef", groupvars=c("lineage"))
skel_phys_nona_2lin
View(skel_phys_nona_2lin)
# PLOTS
# plot differences in daily light integral across lineages and site of origin
dli_site_avg = summarySE(skel_phys_nona_2lin, measurevar="dli_kd0.38", groupvars=c("lineage","sitename"))
dli_site_avg
dli_plot_lineage <- ggplot(skel_phys_nona_2lin, aes(x = sitename, y = dli_kd0.38, color = lineage, fill = lineage))+
theme_bw()+
geom_point(alpha = 0.2, aes(fill = lineage))+
#geom_jitter(aes(color = lineage),width = 0.3)+
scale_fill_manual(values = cols_lineage)+
scale_color_manual(values = cols_lineage)+
ylab(bquote("Daily Light Integral (mol quanta"~m^-2~~day^-1~')')) +
xlab("Lineage")
dli_plot_lineage
dli_plot_lineage <- ggplot(skel_phys_nona_2lin, aes(x = sitename, y = dli_kd0.38, color = lineage, fill = lineage))+
theme_bw()+
#geom_point(alpha = 0.2, aes(fill = lineage))+
geom_jitter(aes(color = lineage),width = 0.3)+
scale_fill_manual(values = cols_lineage)+
scale_color_manual(values = cols_lineage)+
ylab(bquote("Daily Light Integral (mol quanta"~m^-2~~day^-1~')')) +
xlab("Lineage")
dli_plot_lineage
dli_site_avg
dli_plot_lineage <- ggplot(dli_site_avg, aes(x = sitename, y = dli_kd0.38, color = lineage, fill = lineage))+
theme_bw()+
#geom_point(alpha = 0.2, aes(fill = lineage))+
geom_jitter(aes(color = lineage),width = 0.3)+
scale_fill_manual(values = cols_lineage)+
scale_color_manual(values = cols_lineage)+
ylab(bquote("Daily Light Integral (mol quanta"~m^-2~~day^-1~')')) +
xlab("Lineage")
dli_plot_lineage
dli_plot_lineage <- ggplot(skel_phys_nona_2lin, aes(x = sitename, y = dli_kd0.38, color = lineage, fill = lineage))+
theme_bw()+
#geom_point(alpha = 0.2, aes(fill = lineage))+
geom_jitter(aes(color = lineage),width = 0.3)+
scale_fill_manual(values = cols_lineage)+
scale_color_manual(values = cols_lineage)+
ylab(bquote("Daily Light Integral (mol quanta"~m^-2~~day^-1~')')) +
xlab("Lineage")
dli_plot_lineage
dli_plot_lineage <- ggplot(skel_phys_nona_2lin, aes(x = sitename, y = dli_kd0.38, color = lineage, fill = lineage))+
theme_bw()+
geom_point(alpha = 0.2, aes(fill = lineage))+
#geom_jitter(aes(color = lineage),width = 0.3)+
scale_fill_manual(values = cols_lineage)+
scale_color_manual(values = cols_lineage)+
ylab(bquote("Daily Light Integral (mol quanta"~m^-2~~day^-1~')')) +
xlab("Lineage")
dli_plot_lineage
dli_site_avg
dli_plot_lineage <- ggplot(skel_phys_nona_2lin, aes(x = sitename, y = dli_kd0.38, color = lineage, fill = lineage))+
theme_bw()+
#geom_point(alpha = 0.2, aes(fill = lineage))+
geom_jitter(aes(color = lineage),size = 3, width = 0.3)+
scale_fill_manual(values = cols_lineage)+
scale_color_manual(values = cols_lineage)+
ylab(bquote("Daily Light Integral (mol quanta"~m^-2~~day^-1~')')) +
xlab("Lineage")
dli_plot_lineage
dli_plot_lineage <- ggplot(skel_phys_nona_2lin, aes(x = sitename, y = dli_kd0.38, color = lineage, fill = lineage))+
theme_bw()+
#geom_point(alpha = 0.2, aes(fill = lineage))+
geom_jitter(aes(color = lineage),size = 2, width = 0.3)+
scale_fill_manual(values = cols_lineage)+
scale_color_manual(values = cols_lineage)+
ylab(bquote("Daily Light Integral (mol quanta"~m^-2~~day^-1~')')) +
xlab("Lineage")
dli_plot_lineage
dli_plot_lineage <- ggplot(skel_phys_nona_2lin, aes(x = sitename, y = dli_kd0.38, color = lineage, fill = lineage))+
theme_bw()+
#geom_point(alpha = 0.2, aes(fill = lineage))+
geom_jitter(aes(color = lineage), shape = 21, size = 2, width = 0.3)+
scale_fill_manual(values = cols_lineage)+
#scale_color_manual(values = cols_lineage)+
ylab(bquote("Daily Light Integral (mol quanta"~m^-2~~day^-1~')')) +
xlab("Lineage")
dli_plot_lineage
dli_plot_lineage <- ggplot(skel_phys_nona_2lin, aes(x = sitename, y = dli_kd0.38, fill = lineage))+
theme_bw()+
#geom_point(alpha = 0.2, aes(fill = lineage))+
geom_jitter(aes(color = lineage), shape = 21, color = "black", size = 2, width = 0.3)+
scale_fill_manual(values = cols_lineage)+
#scale_color_manual(values = cols_lineage)+
ylab(bquote("Daily Light Integral (mol quanta"~m^-2~~day^-1~')')) +
xlab("Lineage")
dli_plot_lineage
dli_site_avg
dli_plot_lineage <- ggplot(dli_site_avg, aes(x = sitename, y = dli_kd0.38, fill = lineage))+
theme_bw()+
#geom_point(alpha = 0.2, aes(fill = lineage))+
geom_jitter(aes(color = lineage), shape = 21, color = "black", size = 2, width = 0.3)+
scale_fill_manual(values = cols_lineage)+
#scale_color_manual(values = cols_lineage)+
ylab(bquote("Daily Light Integral (mol quanta"~m^-2~~day^-1~')')) +
xlab("Lineage")
dli_plot_lineage
dli_plot_lineage <- ggplot(dli_site_avg, aes(x = sitename, y = dli_kd0.38, fill = lineage))+
theme_bw()+
#geom_point(alpha = 0.2, aes(fill = lineage))+
geom_jitter(aes(color = lineage), shape = 21, color = "black", size = 2.5, width = 0.3)+
scale_fill_manual(values = cols_lineage)+
#scale_color_manual(values = cols_lineage)+
ylab(bquote("Daily Light Integral (mol quanta"~m^-2~~day^-1~')')) +
xlab("Lineage")
dli_plot_lineage
dli_plot_lineage <- ggplot(dli_site_avg, aes(x = sitename, y = dli_kd0.38, fill = lineage))+
theme_bw()+
geom_point(alpha = 0.2, aes(fill = lineage))+
#geom_jitter(aes(color = lineage), shape = 21, color = "black", size = 2.5, width = 0.3)+
scale_fill_manual(values = cols_lineage)+
#scale_color_manual(values = cols_lineage)+
ylab(bquote("Daily Light Integral (mol quanta"~m^-2~~day^-1~')')) +
xlab("Lineage")
dli_plot_lineage
dli_plot_lineage <- ggplot(dli_site_avg, aes(x = sitename, y = dli_kd0.38, fill = lineage))+
theme_bw()+
#geom_point(alpha = 0.2, aes(fill = lineage))+
geom_jitter(aes(color = lineage), shape = 21, color = "black", size = 2.5, width = 0.3)+
scale_fill_manual(values = cols_lineage)+
#scale_color_manual(values = cols_lineage)+
ylab(bquote("Daily Light Integral (mol quanta"~m^-2~~day^-1~')')) +
xlab("Lineage")
dli_plot_lineage
dli_plot_lineage
dli_plot_lineage <- ggplot(dli_site_avg, aes(x = sitename, y = dli_kd0.38, fill = lineage))+
theme_bw()+
#geom_point(alpha = 0.2, aes(fill = lineage))+
geom_jitter(aes(color = lineage), shape = 21, color = "black", size = 2.5, width = 0.3)+
scale_fill_manual(values = cols_lineage)+
#scale_color_manual(values = cols_lineage)+
ylab(bquote("Daily Light Integral (mol quanta"~m^-2~~day^-1~')')) +
xlab("Site of Origin")
dli_plot_lineage
corrsa_phys <- read_excel("/Users/hannahaichelman/Documents/BU/TVE/Corallite_SA/Corallite_SA_Measurements.xlsx", sheet = "data")
head(corrsa_phys)
# remove test fragments and column of notes to look at data
corrsa_phys = corrsa_phys %>%
dplyr::filter(sample.ID != "I2A6 (test)") %>%
dplyr::filter(sample.ID != "I2A6 (test2)") %>%
select(sample.ID, std.area, corallite.avg.area, corallite.avg.poly) %>%
dplyr::rename(frag = sample.ID)
# re-name treatment
corrsa_phys$treat <- c("Initial")
# add identifying data
corrsa_phys$origsitecode <- substr(corrsa_phys$frag, 1, 2)
# add in site name with inshore/offshore indicator
corrsa_phys$sitename <- ifelse(corrsa_phys$origsitecode == 'I2', 'SP',
ifelse(corrsa_phys$origsitecode == 'I3', 'CI',
ifelse(corrsa_phys$origsitecode == 'I4', 'PD',
ifelse(corrsa_phys$origsitecode == 'O2', 'BS',
ifelse(corrsa_phys$origsitecode == 'O3', 'CA',
'BN')))))
corrsa_phys$sitename <- as.factor(corrsa_phys$sitename)
# make new nubbin IDs based on the new, more informative site codes
# add inshore/offshore designation
corrsa_phys$reef <- substr(corrsa_phys$frag,1,1)
corrsa_phys$reef <- ifelse(corrsa_phys$reef == 'O', 'Outer Reef', 'Inner Reef')
corrsa_phys$reef <- as.factor(corrsa_phys$reef)
corrsa_phys$genet <- substr(corrsa_phys$frag,3,3)
#create a new column of combined genotype and site for stats later
corrsa_phys = corrsa_phys %>%
unite(gen_site, c(origsitecode,genet), sep = "", remove = FALSE) %>%
mutate(gen_site = as.factor(gen_site)) %>%
dplyr::filter(gen_site != "I4G") # clone with I4F, remove from dataset
plot(corrsa_phys$corallite.avg.area, corrsa_phys$corallite.avg.poly, pch = 16)
abline(lm(corrsa_phys$corallite.avg.poly ~ corrsa_phys$corallite.avg.area), col = "red", lwd = 3) # add regression line
text(paste("Correlation:", round(cor(corrsa_phys$corallite.avg.area, corrsa_phys$corallite.avg.poly), 2)), x = 10000, y = 4500) # add Pearson correlation
# now need to convert between pixel # and mm^2 for the corallite.avg.poly measurement
# cross multiply to solve for unknown number of mm^2
corrsa_phys = corrsa_phys %>%
mutate(corallite.avg.poly.mm2 = ((corallite.avg.poly*400)/std.area))
# merge with lineage info for later plotting
lineages = read.csv("/Users/hannahaichelman/Documents/BU/TVE/2bRAD/Analysis/tuftscustompipeline_denovo_nosyms/tve_lineages_noclones.csv")
corrsa_phys_all_lin <- left_join(corrsa_phys, lineages, by = "gen_site")
corrsa_phys_all_lin$lineage = as.factor(corrsa_phys_all_lin$lineage)
corrsa_phys_2_lin = corrsa_phys_all_lin %>%
filter(is.na(lineage) | lineage!="L3") # want to keep NA values for lineage here since they still have other info, will remove na's for lineage specific plots
# Stats by lineage
str(corrsa_phys_all_lin)
corrsa_phys_all_lin$gen_site = as.factor(corrsa_phys_all_lin$gen_site)
#m1 <- lmer(corallite.avg.poly.mm2 ~ lineage + (1|gen_site), data = corrsa_phys_all_lin, REML=TRUE)
m1 <- lm(corallite.avg.poly.mm2 ~ lineage, data = corrsa_phys_all_lin)
summary(m1)
anova(m1)
lsmeans(m1, pairwise~lineage, adjust="tukey")
#SummarySE to format data for plotting site name
corrsa_means_site_all_lin <- summarySE(corrsa_phys_all_lin, measurevar="corallite.avg.poly.mm2", groupvars=c("sitename"))
corrsa_means_site_2_lin <- summarySE(corrsa_phys_2_lin, measurevar="corallite.avg.poly.mm2", groupvars=c("sitename"))
# plot, treatment x axis colored by site data figure
corrsa_plot_site <- ggplot(corrsa_means_site_2_lin,aes(x = sitename, y = corallite.avg.poly.mm2, color = sitename, pch = sitename))+
theme_bw()+
geom_point(size = 3, position = position_dodge(width=0.3))+
geom_errorbar(aes(x = sitename, ymax = corallite.avg.poly.mm2+se, ymin = corallite.avg.poly.mm2-se), width = .2, position = position_dodge(width=0.3)) +
scale_color_manual(name = "Site",
labels = c("CI","PD","SP","BN","BS","CA"),
values = cols_site)+
scale_shape_manual(name = "Site",
labels = c("CI","PD","SP","BN","BS","CA"),
values=c(19,19,19,17,17,17))+
xlab("Site Name")+
ylab(bquote("Corallite Area (mm" ^2~')'))+
#ylim(3.75,6) +
#geom_vline(xintercept = 1.5) +
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1), legend.position = "none")
corrsa_plot_site
# SummarySE for reef zone
corrsa_means_reef_all_lin <- summarySE(corrsa_phys_all_lin, measurevar="corallite.avg.poly.mm2", groupvars=c("reef"))
corrsa_means_reef_2_lin <- summarySE(corrsa_phys_2_lin, measurevar="corallite.avg.poly.mm2", groupvars=c("reef"))
# plot, reef zone x axis
corrsa_plot_reef <- ggplot(corrsa_means_reef_2_lin,aes(x = reef, y = corallite.avg.poly.mm2, color = reef, pch = reef))+
theme_bw()+
geom_point(size = 3, position = position_dodge(width=0.3))+
geom_errorbar(aes(x = reef, ymax = corallite.avg.poly.mm2+se, ymin = corallite.avg.poly.mm2-se), width = .2, position = position_dodge(width=0.3)) +
scale_color_manual(name = "Reef Zone",
labels = c("Inshore","Offshore"),
values = c("red4","royalblue4"))+
scale_shape_manual(name = "Reef Zone",
labels = c("Inshore","Offshore"),
values=c(19,17))+
xlab("Reef Zone")+
ylab(bquote("Corallite Area (mm" ^2~')'))+
#ylim(3.75,6) +
#geom_vline(xintercept = 1.5) +
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1)) +
theme(legend.position = "none")
corrsa_plot_reef
#SummarySE to format data for plotting with lineage
corrsa_phys_all_lin_nona = corrsa_phys_all_lin %>%
drop_na(lineage)
corrsa_phys_2_lin_nona = corrsa_phys_2_lin %>%
drop_na(lineage)
corrsa_means_all_lin <- summarySE(corrsa_phys_all_lin_nona, measurevar="corallite.avg.poly.mm2", groupvars=c("lineage"))
corrsa_means_2_lin <- summarySE(corrsa_phys_2_lin_nona, measurevar="corallite.avg.poly.mm2", groupvars=c("lineage"))
# plot, lineage x axis
corrsa_plot_lineage <- ggplot(corrsa_means_all_lin,aes(x = lineage, y = corallite.avg.poly.mm2, color = lineage, fill = lineage))+
theme_bw()+
geom_errorbar(aes(x = lineage, ymax = corallite.avg.poly.mm2+se, ymin = corallite.avg.poly.mm2-se, color = lineage), width = .2, position = position_dodge(width=0.3)) +
geom_point(size = 3, position = position_dodge(width=0.3), shape = 21, color = "black")+
scale_color_manual(name = "Lineage",
#breaks = c("L1","L2"),
breaks = c("L1","L2","L3"),
values = cols_lineage)+
scale_fill_manual(name = "Lineage",
#breaks = c("L1","L2"),
breaks = c("L1","L2","L3"),
values=cols_lineage)+
xlab("Lineage")+
ylab(bquote("Corallite Area (mm" ^2~')'))+
scale_y_continuous(limits = c(6,19), breaks = seq(6,19, by = 3))+
#geom_vline(xintercept = 1.5) +
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1)) +
theme(legend.position = "none")
corrsa_plot_lineage
# plot just CI corals to see if lineage difference holds
corrsa_phys_lineage_CI = corrsa_phys_2_lin_nona %>%
subset(sitename == "CI")
# stats for CI only
str(corrsa_phys_lineage_CI)
#m1 <- lmer(corallite.avg.poly.mm2 ~ lineage + (1|gen_site), data = corrsa_phys_all_lin, REML=TRUE)
m1 <- lm(corallite.avg.poly.mm2 ~ lineage, data = corrsa_phys_all_lin , REML = TRUE)
m1 <- lm(corallite.avg.poly.mm2 ~ lineage, data = corrsa_phys_lineage_CI)
m2 <- lm(corallite.avg.poly.mm2 ~ lineage, data = corrsa_phys_lineage_CI)
summary(m2)
anova(m2)
lsmeans(m2, pairwise~lineage, adjust="tukey")
corrsa_means_lineage_CI <- summarySE(corrsa_phys_lineage_CI, measurevar="corallite.avg.poly.mm2", groupvars=c("lineage"))
corrsa_plot_lineage_CI <- ggplot(corrsa_means_lineage_CI,aes(x = lineage, y = corallite.avg.poly.mm2, color = lineage, fill = lineage))+
theme_bw()+
geom_errorbar(aes(x = lineage, ymax = corallite.avg.poly.mm2+se, ymin = corallite.avg.poly.mm2-se), width = .2, position = position_dodge(width=0.3)) +
geom_point(size = 3, position = position_dodge(width=0.3), shape = 21, color = "black")+
scale_color_manual(name = "Lineage",
breaks = c("L1","L2"),
values = cols_lineage)+
scale_fill_manual(name = "Lineage",
breaks = c("L1","L2"),
values=cols_lineage)+
xlab("Lineage")+
ylab(bquote("Corallite Area (mm" ^2~')'))+
scale_y_continuous(limits = c(6,19), breaks = seq(6,19, by = 3))+
#geom_vline(xintercept = 1.5) +
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1)) +
theme(legend.position = "none")
corrsa_plot_lineage_CI
lsmeans(m2, pairwise~lineage, adjust="tukey")
#### Skeleton Morphometrics ####
skel_phys = read.csv("/Users/hannahaichelman/Documents/BU/TVE/SkeletonMorphometry/T0_morphology.csv")
head(skel_phys)
str(skel_phys)
skel_phys2 = skel_phys %>%
mutate(treat = as.factor(treat), sitename = as.factor(sitename), reef = as.factor(reef), lineage = as.factor(lineage))
head(skel_phys2)
#create a new column of combined genotype and site for stats later
skel_phys2$origsitecode <- substr(skel_phys2$frag, 1, 2)
skel_phys2$genet <- substr(skel_phys2$frag,3,3)
skel_phys3 = skel_phys2 %>%
unite(gen_site, c(origsitecode,genet), sep = "", remove = FALSE) %>%
mutate(gen_site = as.factor(gen_site)) %>%
dplyr::filter(gen_site != "I4G") # clone with I4F, remove from dataset
# subset data for plotting DLI and LEF
skel_phys_nona = skel_phys3 %>%
drop_na(lef)
skel_phys_CI = skel_phys_nona %>%
dplyr::filter(sitename == "CI")
skel_phys_SP = skel_phys_nona %>%
dplyr::filter(sitename == "SP")
skel_phys_nona_2lin = skel_phys_nona %>%
dplyr::filter(is.na(lineage) | lineage!="L3") # want to keep NA values for lineage here since they still have other info, will remove na's for lineage specific plots
# Stats of light enhancement factor by lineage
str(skel_phys2)
m1 <- lm(lef ~ lineage, data = skel_phys3)
summary(m1)
anova(m1)
lsmeans(m1, pairwise~lineage, adjust="tukey")
#m1 <- lm(lef ~ lineage, data = skel_phys3)
m1 <- lm(lef ~ lineage, data = skel_phys_CI)
summary(m1)
anova(m1)
lsmeans(m1, pairwise~lineage, adjust="tukey")
# light enhancement factor plots
# summarize data for plotting
lef_means <- summarySE(skel_phys_nona, measurevar="lef", groupvars=c("lineage"))
lef_means_2lin <- summarySE(skel_phys_nona_2lin, measurevar="lef", groupvars=c("lineage"))
lef_means_SP <- summarySE(skel_phys2_SP, measurevar="lef", groupvars=c("lineage"))
lef_means_CI <- summarySE(skel_phys2_CI, measurevar="lef", groupvars=c("lineage"))
lef_means_CI
#m1 <- lmer(corallite.avg.poly.mm2 ~ lineage + (1|gen_site), data = corrsa_phys_all_lin, REML=TRUE)
m1 <- lmer(corallite.avg.poly.mm2 ~ lineage, data = corrsa_phys_all_lin)
# stats for CI only
str(corrsa_phys_lineage_CI)
m2 <- lm(corallite.avg.poly.mm2 ~ lineage, data = corrsa_phys_lineage_CI)
summary(m2)
anova(m2)
lsmeans(m2, pairwise~lineage, adjust="tukey")
