scale_fill_manual(name = "Lineage",
breaks = c("L1","L2"),
values = cols_lineage)+
scale_color_manual(name = "Lineage",
breaks = c("L1","L2"),
values = cols_lineage)+
xlab("Treatment")+
#ylab(bquote("Specific Growth Rate ("~day^-1~')'))+
geom_hline(yintercept=0, linetype='dotted', color = 'gray')+
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1))
lef_plot_lineage
# plot, treatment x axis colored by lineage data figure
lef_plot_lineage <- ggplot(skel_phys2_plots,aes(x = lineage, y = lef))+
theme_bw()+
geom_jitter(aes(color = lineage, fill = lineage),
position=position_dodge(width=0.3),
alpha=0.2, pch = 21,
color = "black") +
geom_errorbar(data = lef_means, aes(x = lineage, ymax = lef+se, ymin = lef-se, color = lineage), width = .2, position = position_dodge(width=0.4)) +
geom_point(data = lef_means, mapping = aes(x=lineage, y=lef, color = lineage, fill = lineage), size = 3.5, pch = 21, color = "black", position = position_dodge(width=0.4))+
scale_fill_manual(name = "Lineage",
breaks = c("L1","L2"),
values = cols_lineage)+
scale_color_manual(name = "Lineage",
breaks = c("L1","L2"),
values = cols_lineage)+
xlab("Treatment")+
#ylab(bquote("Specific Growth Rate ("~day^-1~')'))+
#geom_hline(yintercept=0, linetype='dotted', color = 'gray')+
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1))
lef_plot_lineage
m1 <- lm(lef ~ lineage, data = skel_phys2)
summary(m1)
skel_phys2_nona_2lin = skel_phys2_nona %>%
filter(is.na(lineage) | lineage!="L3") # want to keep NA values for lineage here since they still have other info, will remove na's for lineage specific plots
# plots
skel_phys2_nona = skel_phys2 %>%
drop_na(lef)
skel_phys2_nona_2lin = skel_phys2_nona %>%
filter(is.na(lineage) | lineage!="L3") # want to keep NA values for lineage here since they still have other info, will remove na's for lineage specific plots
# plot, treatment x axis colored by lineage data figure
lef_plot_lineage <- ggplot(skel_phys2_plots,aes(x = lineage, y = lef))+
theme_bw()+
geom_jitter(aes(color = lineage, fill = lineage),
position=position_dodge(width=0.3),
alpha=0.2, pch = 21,
color = "black") +
geom_errorbar(data = lef_means, aes(x = lineage, ymax = lef+se, ymin = lef-se, color = lineage), width = .2, position = position_dodge(width=0.4)) +
geom_point(data = lef_means, mapping = aes(x=lineage, y=lef, color = lineage, fill = lineage), size = 3.5, pch = 21, color = "black", position = position_dodge(width=0.4))+
scale_fill_manual(name = "Lineage",
# breaks = c("L1","L2"),
values = cols_lineage)+
scale_color_manual(name = "Lineage",
# breaks = c("L1","L2"),
values = cols_lineage)+
xlab("Treatment")+
#ylab(bquote("Specific Growth Rate ("~day^-1~')'))+
#geom_hline(yintercept=0, linetype='dotted', color = 'gray')+
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1))
lef_plot_lineage
# plot, treatment x axis colored by lineage data figure
lef_plot_lineage <- ggplot(skel_phys2_plots,aes(x = lineage, y = lef))+
theme_bw()+
geom_jitter(aes(color = lineage, fill = lineage),
position=position_dodge(width=0.3),
alpha=0.2, pch = 21,
color = "black") +
geom_errorbar(data = lef_means, aes(x = lineage, ymax = lef+se, ymin = lef-se, color = lineage), width = .2, position = position_dodge(width=0.4)) +
geom_point(data = lef_means, mapping = aes(x=lineage, y=lef, color = lineage, fill = lineage), size = 3.5, pch = 21, color = "black", position = position_dodge(width=0.4))+
scale_fill_manual(name = "Lineage",
# breaks = c("L1","L2"),
values = cols_lineage)+
scale_color_manual(name = "Lineage",
# breaks = c("L1","L2"),
values = cols_lineage)+
xlab("Treatment")+
ylab("Light enhancement factor (LEF)")
#ylab(bquote("Specific Growth Rate ("~day^-1~')'))+
#geom_hline(yintercept=0, linetype='dotted', color = 'gray')+
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1))
# plot, treatment x axis colored by lineage data figure
lef_plot_lineage <- ggplot(skel_phys2_plots,aes(x = lineage, y = lef))+
theme_bw()+
geom_jitter(aes(color = lineage, fill = lineage),
position=position_dodge(width=0.3),
alpha=0.2, pch = 21,
color = "black") +
geom_errorbar(data = lef_means, aes(x = lineage, ymax = lef+se, ymin = lef-se, color = lineage), width = .2, position = position_dodge(width=0.4)) +
geom_point(data = lef_means, mapping = aes(x=lineage, y=lef, color = lineage, fill = lineage), size = 3.5, pch = 21, color = "black", position = position_dodge(width=0.4))+
scale_fill_manual(name = "Lineage",
# breaks = c("L1","L2"),
values = cols_lineage)+
scale_color_manual(name = "Lineage",
# breaks = c("L1","L2"),
values = cols_lineage)+
xlab("Treatment")+
ylab("Light enhancement factor (LEF)") +
#ylab(bquote("Specific Growth Rate ("~day^-1~')'))+
#geom_hline(yintercept=0, linetype='dotted', color = 'gray')+
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1))
lef_plot_lineage
lef_plot_lineage %>% select(lineage == "L3")
skel_phys2_CI = skel_phys2_nona %>%
select(sitename == "CI")
head(skel_phys2_nona)
skel_phys2_CI = skel_phys2_nona %>%
dplyr::filter(sitename == "CI")
skel_phys2_CI
skel_phys2_SP = skel_phys2_nona %>%
dplyr::filter(sitename == "SP")
skel_phys2_SP
lef_means_SP <- summarySE(skel_phys2_SP, measurevar="lef", groupvars=c("lineage"))
lef_means_CI <- summarySE(skel_phys2_CI, measurevar="lef", groupvars=c("lineage"))
# Isolate sites for plotting
# plot, treatment x axis colored by lineage data figure
lef_plot_lineage_CI <- ggplot(skel_phys2_CI,aes(x = lineage, y = lef))+
theme_bw()+
geom_jitter(aes(color = lineage, fill = lineage),
position=position_dodge(width=0.3),
alpha=0.2, pch = 21,
color = "black") +
geom_errorbar(data = lef_means, aes(x = lineage, ymax = lef+se, ymin = lef-se, color = lineage), width = .2, position = position_dodge(width=0.4)) +
geom_point(data = lef_means, mapping = aes(x=lineage, y=lef, color = lineage, fill = lineage), size = 3.5, pch = 21, color = "black", position = position_dodge(width=0.4))+
scale_fill_manual(name = "Lineage",
# breaks = c("L1","L2"),
values = cols_lineage)+
scale_color_manual(name = "Lineage",
# breaks = c("L1","L2"),
values = cols_lineage)+
xlab("Treatment")+
ylab("Light enhancement factor (LEF)") +
#ylab(bquote("Specific Growth Rate ("~day^-1~')'))+
#geom_hline(yintercept=0, linetype='dotted', color = 'gray')+
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1))
lef_plot_lineage_CI
skel_phys2_CI
# Isolate sites for plotting
# plot, treatment x axis colored by lineage data figure
lef_plot_lineage_CI <- ggplot(skel_phys2_CI,aes(x = lineage, y = lef))+
theme_bw()+
geom_jitter(aes(color = lineage, fill = lineage),
position=position_dodge(width=0.3),
alpha=0.2, pch = 21,
color = "black") +
geom_errorbar(data = lef_means_CI, aes(x = lineage, ymax = lef+se, ymin = lef-se, color = lineage), width = .2, position = position_dodge(width=0.4)) +
geom_point(data = lef_means_CI, mapping = aes(x=lineage, y=lef, color = lineage, fill = lineage), size = 3.5, pch = 21, color = "black", position = position_dodge(width=0.4))+
scale_fill_manual(name = "Lineage",
# breaks = c("L1","L2"),
values = cols_lineage)+
scale_color_manual(name = "Lineage",
# breaks = c("L1","L2"),
values = cols_lineage)+
xlab("Treatment")+
ylab("Light enhancement factor (LEF)") +
#ylab(bquote("Specific Growth Rate ("~day^-1~')'))+
#geom_hline(yintercept=0, linetype='dotted', color = 'gray')+
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1))
lef_plot_lineage_CI
# Isolate sites for plotting
# plot, treatment x axis colored by lineage data figure
lef_plot_lineage_CI <- ggplot(skel_phys2_CI,aes(x = lineage, y = lef))+
theme_bw()+
geom_jitter(aes(color = lineage, fill = lineage),
position=position_dodge(width=0.3),
alpha=0.2, pch = 21,
color = "black") +
geom_errorbar(data = lef_means_CI, aes(x = lineage, ymax = lef+se, ymin = lef-se, color = lineage), width = .2, position = position_dodge(width=0.4)) +
geom_point(data = lef_means_CI, mapping = aes(x=lineage, y=lef, color = lineage, fill = lineage), size = 3.5, pch = 21, color = "black", position = position_dodge(width=0.4))+
scale_fill_manual(name = "Lineage",
# breaks = c("L1","L2"),
values = cols_lineage)+
scale_color_manual(name = "Lineage",
# breaks = c("L1","L2"),
values = cols_lineage)+
xlab("Treatment")+
ylab("Light enhancement factor (LEF)") +
ggtitle("Cristobal Island") +
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1))
lef_plot_lineage_CI
#SP
# plot, treatment x axis colored by lineage data figure
lef_plot_lineage_SP <- ggplot(skel_phys2_SP,aes(x = lineage, y = lef))+
theme_bw()+
geom_jitter(aes(color = lineage, fill = lineage),
position=position_dodge(width=0.3),
alpha=0.2, pch = 21,
color = "black") +
geom_errorbar(data = lef_means_SP, aes(x = lineage, ymax = lef+se, ymin = lef-se, color = lineage), width = .2, position = position_dodge(width=0.4)) +
geom_point(data = lef_means_SP, mapping = aes(x=lineage, y=lef, color = lineage, fill = lineage), size = 3.5, pch = 21, color = "black", position = position_dodge(width=0.4))+
scale_fill_manual(name = "Lineage",
# breaks = c("L1","L2"),
values = cols_lineage)+
scale_color_manual(name = "Lineage",
# breaks = c("L1","L2"),
values = cols_lineage)+
xlab("Treatment")+
ylab("Light enhancement factor (LEF)") +
ggtitle("STRI Point") +
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1))
lef_plot_lineage_SP
lef_plot_lineage_CI
skel_phys2_nona_2lin = skel_phys2_nona %>%
dplyr::filter(is.na(lineage) | lineage!="L3") # want to keep NA values for lineage here since they still have other info, will remove na's for lineage specific plots
skel_phys2_nona_2lin
lef_means_2lin <- summarySE(skel_phys2_nona_2lin, measurevar="lef", groupvars=c("lineage"))
# plot, treatment x axis colored by lineage data figure
lef_plot_lineage <- ggplot(skel_phys2_nona_2lin, aes(x = lineage, y = lef))+
theme_bw()+
geom_jitter(aes(color = lineage, fill = lineage),
position=position_dodge(width=0.3),
alpha=0.2, pch = 21,
color = "black") +
geom_errorbar(data = lef_means_2lin, aes(x = lineage, ymax = lef+se, ymin = lef-se, color = lineage), width = .2, position = position_dodge(width=0.4)) +
geom_point(data = lef_means_2lin, mapping = aes(x=lineage, y=lef, color = lineage, fill = lineage), size = 3.5, pch = 21, color = "black", position = position_dodge(width=0.4))+
scale_fill_manual(name = "Lineage",
# breaks = c("L1","L2"),
values = cols_lineage)+
scale_color_manual(name = "Lineage",
# breaks = c("L1","L2"),
values = cols_lineage)+
xlab("Treatment")+
ylab("Light enhancement factor (LEF)") +
#ylab(bquote("Specific Growth Rate ("~day^-1~')'))+
#geom_hline(yintercept=0, linetype='dotted', color = 'gray')+
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1))
lef_plot_lineage
# plot, treatment x axis colored by lineage data figure
lef_plot_lineage <- ggplot(skel_phys2_nona_2lin, aes(x = lineage, y = lef))+
theme_bw()+
geom_jitter(aes(color = lineage, fill = lineage),
position=position_dodge(width=0.3),
alpha=0.2, pch = 21,
color = "black") +
geom_errorbar(data = lef_means_2lin, aes(x = lineage, ymax = lef+se, ymin = lef-se, color = lineage), width = .2, position = position_dodge(width=0.4)) +
geom_point(data = lef_means_2lin, mapping = aes(x=lineage, y=lef, color = lineage, fill = lineage), size = 3.5, pch = 21, color = "black", position = position_dodge(width=0.4))+
scale_fill_manual(name = "Lineage",
# breaks = c("L1","L2"),
values = cols_lineage)+
scale_color_manual(name = "Lineage",
# breaks = c("L1","L2"),
values = cols_lineage)+
xlab("Lineage")+
ylab("Light enhancement factor (LEF)") +
#ylab(bquote("Specific Growth Rate ("~day^-1~')'))+
#geom_hline(yintercept=0, linetype='dotted', color = 'gray')+
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1))
lef_plot_lineage
head(skel_phys2)
skel_phys_pca = skel_phys2 %>%
select(frag,treat,sitename,lineage,den_cor_cm2,diam_cal_cm,dist_cor_cm,s_length_cm,s_thick_cm,t_thick_cm,lef)
skel_phys_pca = skel_phys2 %>%
select(frag,treat,sitename,lineage,den_cor_cm2,diam_cal_cm,dist_cor_cm,s_length_cm,s_thick_cm,t_thick_cm,lef) %>%
dplyr::filter(lineage != "L3") %>%
complete.cases()
skel_phys_pca
skel_phys_pca = skel_phys2 %>%
select(frag,treat,sitename,lineage,den_cor_cm2,diam_cal_cm,dist_cor_cm,s_length_cm,s_thick_cm,t_thick_cm,lef) %>%
dplyr::filter(lineage != "L3") %>%
dplyr::filter(complete.cases(.)) #drop any row that has an NA for any time point
skel_phys_pca
str(skel_phys_pca)
skel_phys_pca_log = skel_phys_pca %>%
mutate_if(is.numeric, log)
str(skel_phys_pca_log)
library(ggpubr)
library(ggfortify)
library(ggplot2)
library(cluster)
library(FactoMineR) # lots of options for pca visuals and summary stats
library(factoextra)
library(corrplot)
library(dplyr)
#library(ggbiplot)
library(cowplot)
library(vegan)
str(skel_phys_pca_log)
facto_t0_skel <- PCA(skel_phys_pca_log[,5:11], scale.unit = TRUE, ncp = 10, graph = TRUE)
# PCA for T0 Physiology - color = lineage, shape = sitename
pca_t0_lineage_skel <- fviz_pca_biplot(facto_t0_skel,
label = "var",
col.var = "black", labelsize = 4,
alpha.ind = 0) + # makes individs transparent so they can be overwritten by geom_point()
theme_bw()+
geom_point(aes(colour=skel_phys_pca_log$lineage, shape = skel_phys_pca_log$sitename), size = 2, stroke = 1) +
scale_color_manual(values = cols_lineage, breaks=c("L1","L2"), name = "Lineage") +
scale_shape_manual(values = c(15,16,17,22,21,24),
breaks=c("BN", "BS", "CA", "CI", "PD", "SP"),
labels=c("BN", "BS", "CA", "CI", "PD", "SP"),
name = "Site") +
#  stat_ellipse(geom = "polygon", type = "t", alpha = 0.4,
#               aes(fill= t0_pca_lineage$lineage), show.legend = FALSE) + scale_fill_manual(values=cols_lineage) + # ellipses assumes multivariate distribution using default confidence level (0.95)
stat_ellipse(aes(color=skel_phys_pca_log$lineage), type = "t", lwd = 1)+
labs(x = "PC1 (46.82% explained variance)",
y = "PC2 (15.61% explained variance)") +
theme(plot.title = element_blank(),
axis.title = element_text(face = "bold"),
legend.title.align =  0.5, legend.text.align = 0,
legend.title = element_text(face = "bold"))
pca_t0_lineage_skel
ggsave(pca_t0_lineage_skel, filename = "/Users/hannahaichelman/Documents/BU/TVE/PCAs/pca_t0_lineage_skeleton.pdf", width=6, height=5, units=c("in"), useDingbats=FALSE)
head(skel_phys2)
# establish differences in daily light integral
dli_means <- summarySE(skel_phys2, measurevar="dli", groupvars=c("lineage"))
# establish differences in daily light integral
dli_means <- summarySE(skel_phys2, measurevar="dli_kd0.38", groupvars=c("lineage"))
dli_means
# establish differences in daily light integral
dli_means <- summarySE(skel_phys2_nona_2lin, measurevar="dli_kd0.38", groupvars=c("lineage"))
dli_means
dli_plot_lineage <- ggplot(skel_phys2_nona_2lin, aes(x = lineage, y = dli_kd0.38))+
theme_bw()+
geom_jitter(aes(color = lineage, fill = lineage),
position=position_dodge(width=0.3),
alpha=0.2, pch = 21,
color = "black") +
geom_errorbar(data = dli_means, aes(x = lineage, ymax = dli_kd0.38+se, ymin = dli_kd0.38-se, color = lineage), width = .2, position = position_dodge(width=0.4)) +
geom_point(data = dli_means, mapping = aes(x=lineage, y=dli_kd0.38, color = lineage, fill = lineage), size = 3.5, pch = 21, color = "black", position = position_dodge(width=0.4))+
scale_fill_manual(name = "Lineage",
# breaks = c("L1","L2"),
values = cols_lineage)+
scale_color_manual(name = "Lineage",
# breaks = c("L1","L2"),
values = cols_lineage)+
xlab("Lineage")+
ylab("Light enhancement factor (LEF)") +
#ylab(bquote("Specific Growth Rate ("~day^-1~')'))+
#geom_hline(yintercept=0, linetype='dotted', color = 'gray')+
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1))
dli_plot_lineage
dli_means
# establish differences in daily light integral
dli_means <- summarySE(skel_phys2_nona_2lin, measurevar="dli_kd0.38", groupvars=c("lineage","sitename"))
dli_means
# establish differences in daily light integral
#dli_means <- summarySE(skel_phys2_nona_2lin, measurevar="dli_kd0.38", groupvars=c("lineage","sitename"))
dli_plot_lineage <- ggplot(skel_phys2_nona_2lin, aes(x = lineage, y = dli_kd0.38))+
theme_bw()+
geom_boxplot(alpha = 0.2, aes(fill = lineage))+
scale_fill_manual(values = cols_lineage)+
geom_jitter(aes(color = lineage),width = 0.3)
dli_plot_lineage
# establish differences in daily light integral
#dli_means <- summarySE(skel_phys2_nona_2lin, measurevar="dli_kd0.38", groupvars=c("lineage","sitename"))
dli_plot_lineage <- ggplot(skel_phys2_nona_2lin, aes(x = lineage, y = dli_kd0.38, color = lineage, fill = lineage))+
theme_bw()+
geom_boxplot(alpha = 0.2, aes(fill = lineage))+
scale_fill_manual(values = cols_lineage)+
geom_jitter(aes(color = lineage),width = 0.3)
dli_plot_lineage
# establish differences in daily light integral
#dli_means <- summarySE(skel_phys2_nona_2lin, measurevar="dli_kd0.38", groupvars=c("lineage","sitename"))
dli_plot_lineage <- ggplot(skel_phys2_nona_2lin, aes(x = lineage, y = dli_kd0.38, color = lineage, fill = lineage))+
theme_bw()+
geom_boxplot(alpha = 0.2, aes(fill = lineage))+
geom_jitter(aes(color = lineage),width = 0.3)+
scale_fill_manual(values = cols_lineage)+
scale_color_manual(values = cols_lineage)
dli_plot_lineage
# establish differences in daily light integral
#dli_means <- summarySE(skel_phys2_nona_2lin, measurevar="dli_kd0.38", groupvars=c("lineage","sitename"))
dli_plot_lineage <- ggplot(skel_phys2_nona_2lin, aes(x = lineage, y = dli_kd0.38, color = lineage, fill = lineage))+
theme_bw()+
geom_boxplot(alpha = 0.2, aes(fill = lineage))+
geom_jitter(aes(color = lineage),width = 0.3)+
scale_fill_manual(values = cols_lineage)+
scale_color_manual(values = cols_lineage)+
ylab(bquote("Daily Light Integral (mol quanta"~m^-2~~day^-1~')')) +
xlab("Lineage")
dli_plot_lineage
library(ggplot2)
library(lme4)
library(plotly)
library(ggridges)
library(tidyverse)
library(arsenal) #easily compare two data frames
library(Rmisc)
library(lmerTest)
library(emmeans)
library(reshape)
library(readxl)
library(wesanderson)
library(ggpubr)
library(car)
library(sjPlot)
library(effects)
library(glmmTMB)
library(performance)
library(patchwork)
library(magrittr)
library(SciViews)
##### Read in and format data #####
# set wd
setwd("/Users/hannahaichelman/Documents/BU/TVE")
# read in the data
post_phys <- read.csv('dtvmaster.csv') # physiology data taken at the end of the experiment
init_phys <- read.csv('initial-phys-mod.csv') # physiology data taken at the start of the experiment
# did it load correctly?
head(post_phys)
str(post_phys)
# not reading in calcification or fv/fm data here because we don't have that information for the initial physiology.
# so i am only reading in the data that matches across the initial and final physiology data frames so we can combine them effectively
post_phys = post_phys %>%
dplyr::select(frag, survivedtoend, treat, t3sastan1, t3sastan2, t3sastan3, t3sarec1, t3sarec2, t3sarec3, blastvol, blaster,
hprotplate, hprot1, hprot2, hprot3, chl630_1, chl630_2, chl630_3, chl663_1, chl663_2, chl663_3, symcount1, symcount2, symcount3) %>%
dplyr::rename(sastan1 = t3sastan1, sastan2 = t3sastan2, sastan3 = t3sastan3, sarec1 = t3sarec1, sarec2 = t3sarec2, sarec3 = t3sarec3) %>%
mutate(treat = as.factor(treat), sarec3 = as.numeric(sarec3), blastvol = as.numeric(blastvol)) %>%
dplyr::filter(frag!="I2A12", frag!="I2A7", frag!="O4D8", frag!="I3E10", frag!="I3I10") #these frags are being removed because they were duplicate genotypes within treatment and had the least complete information of the two
init_phys = init_phys %>%
dplyr::select(frag, survivedtoend, treat, pasastan1, pasastan2, pasastan3, pasarec1, pasarec2, pasarec3, blastvol, blaster,
hprotplate, hprot1, hprot2, hprot3, chl630_1, chl630_2, chl630_3, chl663_1, chl663_2, chl663_3, symcount1, symcount2, symcount3) %>%
dplyr::rename(sastan1 = pasastan1, sastan2 = pasastan2, sastan3 = pasastan3, sarec1 = pasarec1, sarec2 = pasarec2, sarec3 = pasarec3) %>%
mutate(treat = as.factor(treat), survivedtoend = as.character(survivedtoend))
dim(post_phys)
dim(init_phys)
combined_phys <- dplyr::bind_rows(post_phys,init_phys)
dim(combined_phys)
head(combined_phys)
# add in the carbohydrate data we are confident in that Olivia Nieves worked on
carbs <- read.csv('/Users/hannahaichelman/Documents/BU/TVE/Carbohydrates/host_sym_carbs_ON.csv')
dim(carbs)
# merge data frames to keep all of the individuals in the combined physiology spreadsheet and add NA's for any that we don't have carb info for
phys <- left_join(combined_phys, carbs, by = "frag")
dim(phys)
head(phys)
# extract the original two letter site code (inshore/offshore #1-4) from the nubbin ID
phys$origsitecode <- substr(phys$frag, 1, 2)
phys$origsitecode <- as.factor(phys$origsitecode)
# add in site name with inshore/offshore indicator
phys$sitename <- ifelse(phys$origsitecode == 'I2', 'SP',
ifelse(phys$origsitecode == 'I3', 'CI',
ifelse(phys$origsitecode == 'I4', 'PD',
ifelse(phys$origsitecode == 'O2', 'BS',
ifelse(phys$origsitecode == 'O3', 'CA',
'BN')))))
phys$sitename <- as.factor(phys$sitename)
# make new nubbin IDs based on the new, more informative site codes
# extract the genotype and frag number
phys$fragid <- substr(phys$frag,3,5)
# add inshore/offshore designation
phys$reef <- substr(phys$frag,1,1)
phys$reef <- ifelse(phys$reef == 'O', 'Outer Reef', 'Inner Reef')
phys$reef <- as.factor(phys$reef)
phys$genet <- substr(phys$fragid,1,1)
#create a new column of combined genotype and site for stats later
phys = phys %>%
unite(gen_site, c(origsitecode,genet), sep = "", remove = FALSE) %>%
mutate(gen_site = as.factor(gen_site))
# re-level and re-name treatment
phys$treat <- factor(phys$treat, levels = c("init", "1", "2", "3","4","5"))
levels(phys$treat) <- c("Initial","Control","Low Var","Mod Var","High Var","Control 2")
phys$treat <- as.factor(phys$treat)
str(phys)
## combine physiology data with dominant symbiont type data
head(phys)
its2_types = read.csv("/Users/hannahaichelman/Documents/BU/TVE/16S_ITS2/ITS_PreStress_Timepoint/ITS2.dominanttype.csv")
head(its2_types)
its2_types = its2_types %>%
select(-Sample_or_Control, -treat, -gen_site, -sitename, -reef, -lineage)
phys <- left_join(phys, its2_types, by = "frag")
str(phys)
phys$dominant_type = as.factor(phys$dominant_type)
phys$minor_type = as.factor(phys$minor_type)
head(phys)
# merge with its2 divs
its2_divs = read.csv("/Users/hannahaichelman/Documents/BU/TVE/16S_ITS2/ITS_PreStress_Timepoint/ITS2.dominantDIVs.csv") %>%
select(frag, dominant_div)
phys <- left_join(phys, its2_divs, by = "frag")
# merge with lineage
# this includes data frame without duplicated preps and with no clones (I4G removed because it was smaller bam file)
lineages = read.csv("/Users/hannahaichelman/Documents/BU/TVE/2bRAD/Analysis/tuftscustompipeline_denovo_nosyms/tve_lineages_noclones.csv")
head(lineages)
phys <- left_join(phys, lineages, by = "gen_site")
phys$lineage = as.factor(phys$lineage)
head(phys)
phys_metadata = phys %>%
select(frag, treat, gen_site, sitename, reef, dominant_div, dominant_type, lineage)
head(phys_metadata)
# set color palettes used throughout
cols_site <- c("CI" = "#543005", "PD"= "#bf812d",  "SP"= "#dfc27d",  "BN" = "#003c30", "BS"= "#35978f", "CA"= "#80cdc1")
cols_treat <- c("darkgrey", "#FF9966","#CC3300","#7f0000")
cols_lineage <- c("L1" = "#3f007d", "L2" = "#807dba", "L3" = "#bcbddc")
its2_cols_greens = c("C1" = "#edf8e9", "C3af" = "#238b45","C3" = "#a1d99b","D1" = "#00441b")
str(phys_metadata_all) # includes all 3 lineages
str(phys_metadata) # includes all 3 lineages
# first try logit regression: https://stats.oarc.ucla.edu/r/dae/logit-regression/
library(aod)
table(chisq_dat$lineage, chisq_dat$reef) # make contingency table
# now try chi-square test:
chisq_dat = phys_metadata %>%
distinct(gen_site, .keep_all = TRUE)
table(chisq_dat$lineage, chisq_dat$reef) # make contingency table
table(chisq_dat$lineage, chisq_dat$reef) # make contingency table
test = chisq.test(table(chisq_dat$lineage, chisq_dat$reef))
fisher.test = fisher.test(table(chisq_dat$lineage, chisq_dat$reef))
fisher.test
# Or can remove low count L3 from dataset and still use Chi-Square test - THIS IS REPORTED IN MANUSCRIPT
chisq_dat_noL3 = phys_metadata %>%
distinct(gen_site, .keep_all = TRUE) %>%
filter(lineage != "L3") %>%
droplevels()
# Or can remove low count L3 from dataset and still use Chi-Square test - THIS IS REPORTED IN MANUSCRIPT
chisq_dat_noL3 = phys_metadata %>%
distinct(gen_site, .keep_all = TRUE) %>%
filter(lineage != "L3") %>%
droplevels()
# Or can remove low count L3 from dataset and still use Chi-Square test - THIS IS REPORTED IN MANUSCRIPT
chisq_dat_noL3 = phys_metadata %>%
distinct(gen_site, .keep_all = TRUE) %>%
dplyr::filter(lineage != "L3") %>%
droplevels()
test = chisq.test(table(chisq_dat_noL3$lineage, chisq_dat_noL3$reef))
test
